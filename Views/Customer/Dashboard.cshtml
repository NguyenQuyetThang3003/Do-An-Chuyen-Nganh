@using System
@using System.Linq
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var success = ViewBag.SuccessCount ?? 0;
    var failed = ViewBag.FailCount ?? 0;
    var total = ViewBag.TotalOrders ?? 0;
    var barData = ViewBag.BarData as IEnumerable<dynamic> ?? Enumerable.Empty<dynamic>();
    var pieData = ViewBag.PieData as IEnumerable<dynamic> ?? Enumerable.Empty<dynamic>();
    var lastUpdate = ViewBag.LastUpdate ?? DateTime.Now.ToString("HH:mm");
    var customer = ViewBag.CustomerName ?? "Kh√°ch h√†ng";
}

<div class="container-fluid px-4">
    <h4 class="mt-4">Xin ch√†o <strong>@customer</strong> üëã</h4>

    <!-- T·ªïng quan -->
    <div class="row text-center mb-3">
        <div class="col-md-4">
            <div class="card shadow-sm border-success">
                <div class="card-body">
                    <h6 class="text-success mb-1"><i class="fas fa-check-circle"></i> Th√†nh c√¥ng</h6>
                    <h4 class="fw-bold text-success">@success</h4>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm border-danger">
                <div class="card-body">
                    <h6 class="text-danger mb-1"><i class="fas fa-times-circle"></i> ƒê√£ ho√†n</h6>
                    <h4 class="fw-bold text-danger">@failed</h4>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm border-primary">
                <div class="card-body">
                    <h6 class="text-primary mb-1"><i class="fas fa-list"></i> T·ªïng ƒë∆°n</h6>
                    <h4 class="fw-bold text-primary">@total</h4>
                </div>
            </div>
        </div>
    </div>

    <!-- Bi·ªÉu ƒë·ªì -->
    <div class="row">
        <!-- Bi·ªÉu ƒë·ªì c·ªôt -->
        <div class="col-md-8">
            <div class="card shadow-sm mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="fas fa-chart-bar"></i> TH·ªêNG K√ä ƒê∆†N H√ÄNG</h5>
                    <form method="get" class="d-flex">
                        <input type="date" name="fromDate" class="form-control form-control-sm me-2"
                               value="@Context.Request.Query["fromDate"]" />
                        <input type="date" name="toDate" class="form-control form-control-sm me-2"
                               value="@Context.Request.Query["toDate"]" />
                        <button class="btn btn-sm btn-outline-primary">L·ªçc</button>
                    </form>
                </div>
                <div class="card-body">
                    <p>
                        Giao th√†nh c√¥ng:
                        <strong class="text-success">
                            @success (@(success + failed == 0 ? 0 : (success * 100 / (success + failed)))%)
                        </strong>
                    </p>
                    <p>ƒê√£ ho√†n: <strong class="text-danger">@failed</strong></p>
                    <canvas id="barChart" height="120"></canvas>
                </div>
            </div>
        </div>

        <!-- Bi·ªÉu ƒë·ªì tr√≤n -->
        <div class="col-md-4">
            <div class="card shadow-sm mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="fas fa-chart-pie"></i> TOP 10 S·∫¢N L∆Ø·ª¢NG</h5>
                    <small class="text-muted">C·∫≠p nh·∫≠t l·∫ßn cu·ªëi l√∫c @lastUpdate</small>
                </div>
                <div class="card-body d-flex">
                    <div class="flex-grow-1">
                        <canvas id="pieChart" height="220"></canvas>
                    </div>
                    <div class="ms-3" style="font-size: 13px; max-height:220px; overflow-y:auto;">
                        <ul id="pieLegend" class="list-unstyled mb-0"></ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // === BAR CHART ===
        const barData = @Html.Raw(Json.Serialize(barData.ToList()));
        const barCtx = document.getElementById('barChart').getContext('2d');

        if (barData.length > 0) {
            new Chart(barCtx, {
                type: 'bar',
                data: {
                    labels: barData.map(b => b.Month),
                    datasets: [
                        {
                            label: 'Giao th√†nh c√¥ng',
                            data: barData.map(b => b.Success),
                            backgroundColor: '#00a65a'
                        },
                        {
                            label: 'ƒê√£ ho√†n',
                            data: barData.map(b => b.Fail),
                            backgroundColor: '#f56954'
                        },
                        {
                            label: 'ƒêang giao',
                            data: barData.map(b => b.Shipping),
                            backgroundColor: '#00c0ef'
                        },
                        {
                            label: 'Ch·ªù x·ª≠ l√Ω',
                            data: barData.map(b => b.Pending),
                            backgroundColor: '#f39c12'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    plugins: { legend: { position: 'bottom' } },
                    scales: { y: { beginAtZero: true, ticks: { stepSize: 1 } } }
                }
            });
        }

        // === PIE CHART ===
        const pieData = @Html.Raw(Json.Serialize(pieData.ToList()));
        if (pieData.length > 0) {
            const colors = [
                '#00c0ef','#f39c12','#00a65a','#f56954','#3c8dbc',
                '#ff6384','#36a2eb','#9966ff','#ff9f40','#d2d6de'
            ];

            const pieCtx = document.getElementById('pieChart').getContext('2d');
            new Chart(pieCtx, {
                type: 'pie',
                data: {
                    labels: pieData.map(p => p.Province),
                    datasets: [{
                        data: pieData.map(p => p.Count),
                        backgroundColor: colors
                    }]
                },
                options: {
                    responsive: true,
                    plugins: { legend: { display: false } }
                }
            });

            // Custom legend
            const legendContainer = document.getElementById('pieLegend');
            pieData.forEach((item, i) => {
                const li = document.createElement('li');
                li.innerHTML = `
                    <span style="display:inline-block;width:12px;height:12px;
                                 background:${colors[i % colors.length]};margin-right:6px"></span>
                    ${item.Province} (${item.Count})
                `;
                legendContainer.appendChild(li);
            });
        }
    </script>
}
